name: NX Build and Deploy

on:
  push:
    branches:
      - master

jobs:
  build-for-development-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Ensure correct SHAs for affected commands
        uses: nrwl/nx-set-shas@v4

      - name: Build projects
        run: npx nx run back-end:build --configuration=production

      - name: Archive build artifacts
        run: tar -czf build-output.tar.gz dist

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nx-build-output
          path: build-output.tar.gz

  deploy-to-development-backend:
    needs: deploy-to-development-backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: nx-build-output

      # Debug: Check if SERVER_URL is set
      - name: Debug Server URL
        run: |
          if [[ -z "$SERVER_URL" ]]; then
            echo "Error: SERVER_URL is not set!"
            exit 1
          else
            echo "Server URL is: $SERVER_URL"
          fi
        env:
          SERVER_URL: ${{ secrets.DEV_SERVER_URL }}

      # Debug: Check SSH Connection Before Deployment
      - name: Debug SSH Connection
        run: |
          mkdir -p ~/.ssh
          echo "ssh folder done"
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          echo "ssh private key save id rsa done"
          chmod 600 ~/.ssh/id_rsa
          echo "chmod done"
        env:
          SSH_PRIVATE_KEY: ${{ secrets.DEV_SSH_PRIVATE_KEY }}
          SERVER_URL: ${{ secrets.DEV_SERVER_URL }}

      - name: Deploy to server
        run: |
          echo "Transferring build files..."
          scp -o StrictHostKeyChecking=no build-output.tar.gz $SERVER_URL:~/cricket-analysis-build

          echo "Extracting and restarting services..."
          ssh -o StrictHostKeyChecking=no $SERVER_URL "
            export NVM_DIR=\$HOME/.nvm
            [ -s \"\$NVM_DIR/nvm.sh\" ] && . \"\$NVM_DIR/nvm.sh\"
            [ -s \"\$NVM_DIR/bash_completion\" ] && . \"\$NVM_DIR/bash_completion\"  # Optional: Load completion
            nvm use 22.14.0
            export PATH=\$NVM_DIR/versions/node/v22.14.0/bin:\$PATH

            # Debugging: Verify installation
            echo 'Node.js version:'
            node -v
            echo 'NPM version:'
            npm -v
            
            cd ~/cricket-analysis-build &&
            tar -xzf build-output.tar.gz &&
            mv ~/cricket-analysis-build/dist/apps/back-end/assets/.gitkeep ~/cricket-analysis-build/dist/assets/.gitkeep &&
            mv ~/cricket-analysis-build/dist/apps/back-end/package.json ~/cricket-analysis-build/dist/package.json &&
            mv ~/cricket-analysis-build/dist/apps/back-end/package-lock.json ~/cricket-analysis-build/dist/package-lock.json &&
            mv ~/cricket-analysis-build/dist/apps/back-end/main.js ~/cricket-analysis-build/dist/main.js &&
            mv ~/cricket-analysis-build/dist/apps/back-end/main.js.map ~/cricket-analysis-build/dist/main.js.map &&
            cd ~/cricket-analysis-build/dist && npm install &&
            pm2 restart 0"
        env:
          SSH_PRIVATE_KEY: ${{ secrets.DEV_SSH_PRIVATE_KEY }}
          SERVER_URL: ${{ secrets.DEV_SERVER_URL }}
            
      - name: Clean Up server
        run: |
          ssh -o StrictHostKeyChecking=no $SERVER_URL "
           rm -r ~/cricket-analysis-build/build-output.tar.gz &&
           rm -r ~/cricket-analysis-build/dist/apps
          "
        env:
          SSH_PRIVATE_KEY: ${{ secrets.DEV_SSH_PRIVATE_KEY }}
          SERVER_URL: ${{ secrets.DEV_SERVER_URL }}

  deploy-to-production-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Debug: Check if SERVER_URL is set
      - name: Debug Server URL
        run: |
          if [[ -z "$SERVER_URL" ]]; then
            echo "Error: SERVER_URL is not set!"
            exit 1
          else
            echo "Server URL is: $SERVER_URL"
          fi
        env:
          SERVER_URL: ${{ secrets.SERVER_URL }}

      # Debug: Check SSH Connection Before Deployment
      - name: Debug SSH Connection
        run: |
          mkdir -p ~/.ssh
          echo "ssh folder done"
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          echo "ssh private key save id rsa done"
          chmod 600 ~/.ssh/id_rsa
          echo "chmod done"
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_URL: ${{ secrets.SERVER_URL }}

      - name: Deploy to production server ( backend )
        run: |
          echo "Extracting and restarting services..."
          ssh -o StrictHostKeyChecking=no $SERVER_URL "
            export NVM_DIR=\$HOME/.nvm
            [ -s \"\$NVM_DIR/nvm.sh\" ] && . \"\$NVM_DIR/nvm.sh\"
            [ -s \"\$NVM_DIR/bash_completion\" ] && . \"\$NVM_DIR/bash_completion\"  # Optional: Load completion
            nvm use 22.14.0
            export PATH=\$NVM_DIR/versions/node/v22.14.0/bin:\$PATH

            # Debugging: Verify installation
            echo 'Node.js version:'
            node -v
            echo 'NPM version:'
            npm -v
            
            cd ~/cricket-analysis/back-end/cricket-analysis-monorepo &&
            git pull &&
            npm i &&
            npx nx build back-end &&
            pm2 restart 4"
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_URL: ${{ secrets.SERVER_URL }}
  
  deploy-to-production-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Debug: Check if SERVER_URL is set
      - name: Debug Server URL
        run: |
          if [[ -z "$SERVER_URL" ]]; then
            echo "Error: SERVER_URL is not set!"
            exit 1
          else
            echo "Server URL is: $SERVER_URL"
          fi
        env:
          SERVER_URL: ${{ secrets.SERVER_URL }}

      # Debug: Check SSH Connection Before Deployment
      - name: Debug SSH Connection
        run: |
          mkdir -p ~/.ssh
          echo "ssh folder done"
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          echo "ssh private key save id rsa done"
          chmod 600 ~/.ssh/id_rsa
          echo "chmod done"
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_URL: ${{ secrets.SERVER_URL }}

      - name: Deploy to production server ( frontend )
        run: |
          echo "Extracting and restarting services..."
          ssh -o StrictHostKeyChecking=no $SERVER_URL "
            export NVM_DIR=\$HOME/.nvm
            [ -s \"\$NVM_DIR/nvm.sh\" ] && . \"\$NVM_DIR/nvm.sh\"
            [ -s \"\$NVM_DIR/bash_completion\" ] && . \"\$NVM_DIR/bash_completion\"  # Optional: Load completion
            nvm use 22.14.0
            export PATH=\$NVM_DIR/versions/node/v22.14.0/bin:\$PATH

            # Debugging: Verify installation
            echo 'Node.js version:'
            node -v
            echo 'NPM version:'
            npm -v
            
            cd ~/cricket-analysis/front-end/cricket-analysis-monorepo &&
            git pull &&
            npm i &&
            npx nx build front-end &&
            pm2 restart 6"
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_URL: ${{ secrets.SERVER_URL }}