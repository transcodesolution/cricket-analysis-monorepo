name: NX Build and Deploy

on:
  push:
    branches:
      - development
      - master

jobs:
  deploy-to-development-backend:
    if: github.ref == 'refs/heads/development'
    runs-on: ubuntu-latest
    name: Deploy Development Backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 94.136.185.156 >> ~/.ssh/known_hosts
        env:
          SSH_PRIVATE_KEY: ${{ secrets.DEV_SSH_PRIVATE_KEY }}
          SERVER_URL: ${{ secrets.DEV_SERVER_URL }}

      - name: Test SSH Connection
        run: ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no root@94.136.185.156 "echo 'SSH connection successful!'"

      - name: Deploy to development server (Cricket-Analysis-BE)
        run: |
          BRANCH="${GITHUB_REF##*/}"
          if [[ "$BRANCH" == "development" ]]; then
            APP_PATH="./cricket-analysis/dev/cricket-analysis-monorepo"
            PM2_PROCESS="cricket-analysis-dev"
            GIT_BRANCH="development"
          else
            echo "❌ Unsupported branch: $BRANCH"
            exit 1
          fi

          echo "✅ Deploying to $SERVER_URL ($BRANCH)"

          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no $SERVER_URL "
            export NVM_DIR=\$HOME/.nvm && \
            [ -s \"\$NVM_DIR/nvm.sh\" ] && . \"\$NVM_DIR/nvm.sh\" && \
            nvm use 22.14.0 || nvm install 22.14.0 && \
            export PATH=\$NVM_DIR/versions/node/v22.14.0/bin:\$PATH && \
            echo '🔧 Node version:' && node -v && \
            echo '🔧 NPM version:' && npm -v && \
            cd $APP_PATH && \
            echo '📦 Pulling latest code...' && \
            git pull origin $GIT_BRANCH && \
            echo '📦 Installing dependencies...' && \
            rm -rf node_modules package-lock.json && \
            npm install && \
            echo '🛠 Building project...' && \
            npx nx build back-end && \
            if ! command -v pm2 &> /dev/null; then \
              echo '⚙️ PM2 not found. Installing...' && npm install -g pm2; \
            else \
              echo '✅ PM2 already installed.'; \
            fi && \
            echo '🚀 Restarting PM2 process: $PM2_PROCESS' && \
            pm2 restart $PM2_PROCESS
          "
        env:
          SERVER_URL: ${{ secrets.DEV_SERVER_URL }}

  deploy-to-production-backend:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    name: Deploy Production Backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Debug: Check if SERVER_URL is set
      - name: Debug Server URL
        run: |
          if [[ -z "$SERVER_URL" ]]; then
            echo "Error: SERVER_URL is not set!"
            exit 1
          else
            echo "Server URL is: $SERVER_URL"
          fi
        env:
          SERVER_URL: ${{ secrets.SERVER_URL }}

      # Debug: Check SSH Connection Before Deployment
      - name: Debug SSH Connection
        run: |
          mkdir -p ~/.ssh
          echo "ssh folder done"
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          echo "ssh private key save id rsa done"
          chmod 600 ~/.ssh/id_rsa
          echo "chmod done"
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_URL: ${{ secrets.SERVER_URL }}

      - name: Deploy to production server ( backend )
        run: |
          echo "Extracting and restarting services..."
          ssh -o StrictHostKeyChecking=no $SERVER_URL "
            export NVM_DIR=\$HOME/.nvm
            [ -s \"\$NVM_DIR/nvm.sh\" ] && . \"\$NVM_DIR/nvm.sh\"
            [ -s \"\$NVM_DIR/bash_completion\" ] && . \"\$NVM_DIR/bash_completion\"  # Optional: Load completion
            nvm use 22.14.0
            export PATH=\$NVM_DIR/versions/node/v22.14.0/bin:\$PATH

            # Debugging: Verify installation
            echo 'Node.js version:'
            node -v
            echo 'NPM version:'
            npm -v
            
            cd ~/cricket-analysis/back-end/cricket-analysis-monorepo &&
            git pull &&
            npm i &&
            npx nx build back-end &&
            pm2 restart back-end"
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_URL: ${{ secrets.SERVER_URL }}
  
  deploy-to-production-frontend:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    name: Deploy Development frontend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Debug: Check if SERVER_URL is set
      - name: Debug Server URL
        run: |
          if [[ -z "$SERVER_URL" ]]; then
            echo "Error: SERVER_URL is not set!"
            exit 1
          else
            echo "Server URL is: $SERVER_URL"
          fi
        env:
          SERVER_URL: ${{ secrets.SERVER_URL }}

      # Debug: Check SSH Connection Before Deployment
      - name: Debug SSH Connection
        run: |
          mkdir -p ~/.ssh
          echo "ssh folder done"
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          echo "ssh private key save id rsa done"
          chmod 600 ~/.ssh/id_rsa
          echo "chmod done"
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_URL: ${{ secrets.SERVER_URL }}

      - name: Deploy to production server ( frontend )
        run: |
          echo "Extracting and restarting services..."
          ssh -o StrictHostKeyChecking=no $SERVER_URL "
            export NVM_DIR=\$HOME/.nvm
            [ -s \"\$NVM_DIR/nvm.sh\" ] && . \"\$NVM_DIR/nvm.sh\"
            [ -s \"\$NVM_DIR/bash_completion\" ] && . \"\$NVM_DIR/bash_completion\"  # Optional: Load completion
            nvm use 22.14.0
            export PATH=\$NVM_DIR/versions/node/v22.14.0/bin:\$PATH

            # Debugging: Verify installation
            echo 'Node.js version:'
            node -v
            echo 'NPM version:'
            npm -v
            
            cd ~/cricket-analysis/front-end/cricket-analysis-monorepo &&
            git pull &&
            npm i &&
            npx nx build front-end &&
            pm2 restart front-end"
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_URL: ${{ secrets.SERVER_URL }}